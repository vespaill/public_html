/*******************************************************************************
**    File: style.css                                                         **
**                                                                            **
**    91.461 Assignment 7: Using the jQuery Validation Plugin with Your       **
**                         Dynamic Table                                      **
**                                                                            **
**    Victor M Espaillat, UMass Lowell Computer Science,                      **
**    victor_espaillat@student.uml.edu                                        **
*******************************************************************************/


/*******************************************************************************
**                                 General                                    **
*******************************************************************************/
body {
    background: #202020;
    color: white;
}

h1 {
    font-family: "cmu_serif_italic_upright";
    border-color: #17A2B7;
    font-size: 32px;
    text-align: center;
}

p, button {
    font-family: "cmu_typewriter";
}

button {
    border-radius: 3px;
    padding: 5px;
}

.error {
    display: block;
    margin-left: 1em;
    font-size: 12px;
    border-radius: 10px;
    background-color: #d9534f;
    color: white;
    font-family: "cmu_typewriter";
    padding: 0 10px;
    display: table;
    margin: 0 auto 2em auto;
}

.border-bottom {
    border-bottom: 1px solid gray;
}

/*******************************************************************************
**                                  Forms                                     **
*******************************************************************************/
form {
    text-align: center;
}

fieldset {
    width: 60%;
    margin: auto;
    border: none;
    margin-bottom: 1em;
}

.form-group {
    margin-bottom: 1em;
}

label {
    display: block;
    font-family: "cmu_serifroman";
    margin-bottom: 1ex;
}

input {
    border-radius: 3px;
    display: block;
    font-family: "cmu_typewriter_italic";
    text-align: center;
    margin-bottom: 1em;
    color: white;
    border: 0.7px solid white;
    margin: 0 auto 1em auto;
}

.form-control {
    background-color: gray;
    transition: background 0.5s;
}

.input-error {
    background-color: #d9534f;
    transition: background 0.5s;
}

.input-valid {
    color: black;
    border: 2px solid #5cb85c;
    background-color: white;
    transition: background 0.5s, border 0.5s;

}

.form-control::placeholder {
    font-size: 12px;
    color: white;
}

/* When selecting a form */
.form-control:focus {
    border: 0.7px solid white;
    box-shadow: 0px 0px 5px white;
    background-color: white;
    color: black;
}

/*******************************************************************************
**                                  Tables                                    **
*******************************************************************************/
table {
    font-family: "cmu_serif_italic_upright";
    font-weight: bold;
    border-radius: 15px;
    border-collapse: collapse;
    margin: auto;
}

#tabDiv {
    margin: auto;
    opacity: 0;
    padding-left: 500px;
}

/* I don't want the curse to change into the "text" type cursor when hovering
   over table text. I want it to always be the default "context-menu" cursor. */
th, td {
    cursor: context-menu;
    text-align: center;
    /* Turn the cells into perfect squares. */
    width: 50px;
    height: 50px;
}

/* Change background to a yellowish color when mouse HOVERS over it. */
td:hover {
    background-color: #F0AD4E;
}

td {
    background-color: #DCDCDC;
    /* Fade back to default color when HOVER is off. */
    transition: background-color 0.3s;
    color: black;
}

/*  Selects all <th> elements where the parent is a <tr> element. */
tr > th {
    background-color: black;
    color: white;
}

/* Hide upper-left cell */
tr:first-child th:first-child  {
    background-color: transparent;
}

/* Generate checkerboard pattern */
tr:nth-child(even) td:nth-child(odd):not(:hover),
tr:nth-child(odd) td:nth-child(even):not(:hover) {
    background-color: #FF6781;
}

/* Round out the top-left edges of the first multipler cell and the first
   multiplicand cell. */
tr:nth-child(1) th:nth-child(2),
tr:nth-child(2) th:nth-child(1) {
    border-top-left-radius: 15px;
}

tr:first-child th:last-child {
    border-top-right-radius: 15px;
}

tr:last-child td:last-child {
    border-bottom-right-radius: 15px;
}

tr:last-child th {
    border-bottom-left-radius: 15px;
}